{"componentChunkName":"component---src-templates-blog-post-js","path":"/using-proxy-for-desktop-program-on-ubuntu/","result":{"data":{"site":{"siteMetadata":{"title":"Blog.kt"}},"markdownRemark":{"id":"f87c04cc-e689-5bda-abae-f6df68d73041","excerpt":"问题是什么？ 如果你不具备路由器代理的情况，那么我们需要在本地做透明代理。这样的话，对本地代理的使用情况完全取决于第三方程序的支持情况。\n有一些程序会自动检测代理，有一些提供配置选项。对于两种而言，设置代理都很方便。\n那么还有一些 GUI…","html":"<h1>问题是什么？</h1>\n<p>如果你不具备路由器代理的情况，那么我们需要在本地做透明代理。这样的话，对本地代理的使用情况完全取决于第三方程序的支持情况。\n有一些程序会自动检测代理，有一些提供配置选项。对于两种而言，设置代理都很方便。\n那么还有一些 GUI 软件，但是并不提供代理设置选项，或者在首次启动的时候就必须以代理模式允许并且还<strong>不允许</strong>设置代理（说的就是你 Dropbox）。</p>\n<h1>这个时候该怎么办呢？</h1>\n<p>我们要理解一个内容就是，对于 Linux 而言，所有程序都可以通过命令行启动的。（此处的”程序”包含二进制文件、脚本等等）</p>\n<p>所以，我们基本思路就是：</p>\n<ul>\n<li>找到程序本体</li>\n<li>通过命令行 + proxychains 设置代理并启动</li>\n</ul>\n<h1>来吧，解决方法</h1>\n<h2>找到程序的本体</h2>\n<h3>用 find</h3>\n<p>在 linux 下找东西方便得很呢，打开你的 terminal：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">\n<span class=\"token function\">man</span> <span class=\"token function\">find</span>\n</code></pre></div>\n<p>这个美妙的工具可以搜索他能搜索到的东西，要找个程序还不是分分钟的事情。\n举个例子。我们要找 Dropbox 的二进制文件所在：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> <span class=\"token function\">find</span> / <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"dropbox\"</span></code></pre></div>\n<p>搜索结果：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">\n/usr/share/doc/libnet-dropbox-api-perl/examples/dropbox\n/usr/share/doc/dropbox\n/usr/bin/dropbox\n</code></pre></div>\n<p>结果应该已经出来了。\n一般通过 <code class=\"language-text\">dpkg</code> 或者软件管理安装的软件都会将目录放置在 <code class=\"language-text\">/usr/local/</code> 、<code class=\"language-text\">/usr/bin/</code>等目录中。（那个 <code class=\"language-text\">doc</code>就是文档的位置啦，一般放置授权协议、更新日志之类的文档。</p>\n<p>所以这里的 <code class=\"language-text\">dropbox</code> 的二进制文件就在 <code class=\"language-text\">/usr/bin/dropbox</code> 中咯。\n执行：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">proxychains /usr/bin/dropbox</code></pre></div>\n<p>就可以通过代理的方式启动了。</p>\n<h2>能不能不要这么麻烦？</h2>\n<p>啊，这样很麻烦啊，难道每次都要记住位置，敲那么长的命令才能愉快地食用吗？\n<strong>当然不是啊</strong>。\n既然本文的标题指的是<strong>桌面程序</strong>，就说明还有更好的方法啊。</p>\n<p>当然，对于 <code class=\"language-text\">Dropbox</code> 而言，你首次启动之后，就可以进去设置代理了，也就不需要使用以下方法了。\n下面的方法是针对：需要代理但是没有提供代理设置的桌面程序（GUI）。</p>\n<h1>解决方法</h1>\n<p><strong>前提是你想通过图标启动，如果你只想通过命令行启动…其实写个脚本也可以</strong>。</p>\n<p>其实思路很简单，和<a href=\"https://blog.rosuh.me/2017/11/install-netease-cloud-music-on-ubuntu-17-10/\">我之前写的这篇文章</a>类似。\n桌面应用程序，一般都带有图标啊。点击图标的时候，桌面环境就会读取该程序的<code class=\"language-text\">desktop</code>配置，通过该配置里的内容执行程序咯。\n看看你的 <code class=\"language-text\">/usr/share/applications</code>，里面是不是有很多<code class=\"language-text\">desktop</code>配置文件呐。\n找到你想启动的应用程序，都会出现类似下面的内容（只多不少，因为有些程序会对本地化作处理</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">[</span>Desktop Entry<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Version</span><span class=\"token operator\">=</span><span class=\"token number\">1.0</span>\n<span class=\"token assign-left variable\">Name</span><span class=\"token operator\">=</span>Zeal\n<span class=\"token assign-left variable\">GenericName</span><span class=\"token operator\">=</span>Documentation Browser\n<span class=\"token assign-left variable\">Comment</span><span class=\"token operator\">=</span>Simple API documentation browser\n<span class=\"token assign-left variable\">Exec</span><span class=\"token operator\">=</span>/usr/bin/zeal %u\n<span class=\"token assign-left variable\">Icon</span><span class=\"token operator\">=</span>zeal\n<span class=\"token assign-left variable\">Terminal</span><span class=\"token operator\">=</span>false\n<span class=\"token assign-left variable\">Type</span><span class=\"token operator\">=</span>Application\n<span class=\"token assign-left variable\">Categories</span><span class=\"token operator\">=</span>Development<span class=\"token punctuation\">;</span>\n<span class=\"token assign-left variable\">MimeType</span><span class=\"token operator\">=</span>x-scheme-handler/dash<span class=\"token punctuation\">;</span>x-scheme-handler/dash-plugin<span class=\"token punctuation\">;</span></code></pre></div>\n<p>看到 <code class=\"language-text\">Exec</code> 这一行，是不是很熟悉呀，其实这就是指向程序所在的文件夹。如果该程序加入了环境变量，那你就看不到路径咯。\n我们要做的就很简单了，在原来路径或程序名前面加上 <code class=\"language-text\">proxychains</code> 就可以咯。或者是其他代理比如<code class=\"language-text\">tsocks</code>，也就会变成 <code class=\"language-text\">Exec=proxychains /usr/bin/zeal %u</code>。\n保存之后重启，点击桌面图标就会自动以代理模式启动咯。</p>","frontmatter":{"title":"如何在 Ubuntu 对桌面程序使用代理","date":"2017-11-08","description":"如果你不具备路由器代理的情况，那么我们需要在本地做透明代理。这样的话，对本地代理的使用情况完全取决于第三方程序的支持情况...","excerpt":null}},"previous":{"fields":{"slug":"Introduction-to-optimize-hexo-blog"},"frontmatter":{"title":"Hexo 博客优化入门（一）"}},"next":{"fields":{"slug":"Use-NW-to-build-a-web-app"},"frontmatter":{"title":"使用 NW.js 创建简单的桌面应用"}}},"pageContext":{"id":"f87c04cc-e689-5bda-abae-f6df68d73041","previousPostId":"6b03c3b0-73a5-5745-8fb7-7d4d45157f18","nextPostId":"98393af1-24c6-5be3-8228-08b237579199"}},"staticQueryHashes":["2082311839","2355076697","959449634"],"slicesMap":{}}