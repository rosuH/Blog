{"componentChunkName":"component---src-templates-blog-post-js","path":"/android-file-type/","result":{"data":{"site":{"siteMetadata":{"title":"Blog.kt"}},"markdownRemark":{"id":"47e589e7-cdf0-5bbe-b03c-db6b5151c44e","excerpt":"最近遇到一个问题，需要判断视频文件是否是真正的视频文件。\n什么意思呢？萤石的摄像头是将视频写入 TF 卡的： 通过萤石云视频平台将TF卡格式化后，程序会采用预占空间的方式预先将1/…","html":"<p>最近遇到一个问题，需要判断视频文件是否是真正的视频文件。\n什么意思呢？萤石的摄像头是将视频写入 TF 卡的：</p>\n<blockquote>\n<p>通过萤石云视频平台将TF卡格式化后，程序会采用预占空间的方式预先将1/4的空间作为视频或者图片的存储空间。</p>\n</blockquote>\n<p>然后他预写入的文件是<code class=\"language-text\">.mp4</code>后缀的，但是是不可播放的文件。所以一旦播放器播放它，可能就会出错了。为了避免这样的情况发生，我们能否在检索视频的时候就识别出无法播放的视频呢？</p>\n<p>我一开始的思路是，能否通过判断文件类型的方式来判断是否播放呢？有可能他预格式化的视频文件，虽然后缀是<code class=\"language-text\">.mp4</code>，但是本质上不是一个视频文件呢？</p>\n<h1>判断文件类型</h1>\n<p>在 Java 中，比较常见的用来判断文件类型的库，就是<a href=\"http://tika.apache.org/\">Apache Tika</a>。\n引入依赖后，使用起来也十分简单：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user.home\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token string\">\"/Downloads/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">File</span> file1 <span class=\"token operator\">:</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">requireNonNull</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">listFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file1<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">String</span> type <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tika</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>file1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>file1<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" ======>>> \"</span> <span class=\"token operator\">+</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span></code></pre></div>\n<p>下面是输出结果：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">background.svg <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> image/svg+xml\nnew.json <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/json\nmid_top_1.jpg <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> image/jpeg\n.DS_Store <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/octet-stream\napache-maven-3.5.4-bin.tar.1.gz <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/x-gzip\n这本来是张 png 图片.mp4 <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> image/png\n.localized <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/octet-stream\nold.json <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/json\n不学无数 — Java 中 IO 和 NIO - 掘金.pdf <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/pdf\nLayout_Mobile_Whiteframe.ai <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/pdf\nSnipaste_2018-09-22_22-36-21.png <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> image/png\nbackground.png <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> image/png\nhiv00014.mp4 <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> video/mp4\nSeimiCrawler-master.1.zip <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/zip\ncn_windows_10_business_editions_version_1803_updated_march_2018_x64_dvd_12063730.iso <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/x-iso9660-image\ni_con_permission.png <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> image/png\n错误.png <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> image/png\nopen_gapps-arm64-9.0-pico-20180923.zip <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/zip\nforPush.sh <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/x-sh\nadbIn.sh <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/x-sh\nHavoc-OS-v2.0-20180923-oneplus3-Official.zip <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/zip\nMockingBot.dmg <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> application/octet-stream</code></pre></div>\n<p>可以看到，几乎全部格式都识别出来了。而且我这里有一个『浑水摸鱼』的『家伙』，那就是<code class=\"language-text\">这本来是张 png 图片.mp4</code>，人如其名。\n这个也识别出来了（<code class=\"language-text\">octet-stream</code>指的是二进制文件）。\n那 Tika 究竟是怎么做的呢？让我们来看看源码呗。\n篇幅所限，如果你对这个部分有兴趣，可以移步我的另一篇文章<a href=\"https://blog.rosuh.me/2018/09/tika-source-code-analysis/\">Tika 源码浅析</a>。</p>\n<p><em>这里假设你已经看过了 Tika 源码…</em></p>\n<p>现在我们知道了 Tika 通过文件的首部字节、文件后缀判断文件的类型。但是这样依旧无法判断视频是否可以播放。\n因为在实际使用中，我发现，有一些个视频文件，虽然是无法播放的，但是它们的首部已经被写入了，成为另一个『空视频文件』。\n真的蛋疼。如果单纯使用 Tika 的话，显然会有误差。\n那么有没有其他应用层面的 trick 呢？</p>\n<p>答案就是 <a href=\"https://github.com/wseemann/FFmpegMediaMetadataRetriever\">FFmpegMediaMetadataRetriever</a>。</p>\n<h1>FFmpegMediaMetadataRetriever 是什么？</h1>\n<p>之所以说是 trick…是因为 FFmpegMediaMetadataRetriever 是一个获取媒体文件信息的库。\n我在使用时发现，如果一个视频只被写了头部，但是没有实际内容的话，该视频是没有编码信息的。\n这个想法是来自<a href=\"https://zh.wikipedia.org/zh-hans/MediaInfo\">MediaInfo</a>这个软件。因为我是先用这个软件测试了一遍，发现是可行的。\n然后我找到了在 Android 平台可用的一个类似的库，也就是 FFmpegMediaMetadataRetriever</p>\n<h2>使用</h2>\n<p>我们引入依赖</p>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\">implementation <span class=\"token string\">'com.github.wseemann:FFmpegMediaMetadataRetriever:1.0.14'</span></code></pre></div>\n<p>然后开始使用：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getAvailableVideoList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> <span class=\"token class-name\">SDCardPath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SDCardPath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> pathList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">FFmpegMediaMetadataRetriever</span> mediaMetadataRetriever <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FFmpegMediaMetadataRetriever</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">File</span> fileList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SDCardPath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileList<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">File</span> file <span class=\"token operator\">:</span> fileList<span class=\"token punctuation\">.</span><span class=\"token function\">listFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mp4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    mediaMetadataRetriever<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    mediaMetadataRetriever<span class=\"token punctuation\">.</span><span class=\"token function\">extractMetadata</span><span class=\"token punctuation\">(</span><span class=\"token constant\">METADATA_KEY_VIDEO_CODEC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    pathList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IllegalArgumentException</span> iae<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            iae<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> pathList<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果视频文件无效的，FFmpegMediaMetadataRetriever 会抛出一个异常：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">java.lang.IllegalArgumentException: setDataSource failed: status <span class=\"token operator\">=</span> 0xFFFFFFFF</code></pre></div>\n<p>然后我们捕获这个异常，做一些其他的工作就可以。\n这个方法就目前的使用来看，是最稳定和准确的方法。\n缺点是：</p>\n<ul>\n<li>\n<p><code class=\"language-text\">setDataSource()</code>过程有一些耗时，实际上测试，256MB 的视频文件，调用一次需要将近 1s 的时间</p>\n</li>\n<li>\n<p>会抛异常…</p>\n</li>\n</ul>\n<h1>还有其他办法吗？</h1>\n<p>最一开始想的，其实是开一个 VideoPlayer，然后在<code class=\"language-text\">onError()</code>设一个监听器，如果播放错误就说明该文件无效。\n但是经过我自己的评估，这样的性能实际上更差。</p>\n<p>也不知道是否有其他更优的方法，如果有的话，还请不吝赐教~</p>\n<hr>\n<p><em>参看</em></p>\n<ul>\n<li>\n<p><a href=\"https://stackoverflow.com/questions/9738597/how-to-reliably-detect-file-types\">How to reliably detect file types?</a></p>\n</li>\n<li>\n<p><a href=\"https://zh.wikipedia.org/wiki/MediaInfo\">MediaInfo</a></p>\n</li>\n</ul>","frontmatter":{"title":"如何判断萤石云视频是否可以播放","date":"2018-09-26","description":"最近遇到一个需求，需要判断视频文件是否是真正的视频文件。什么意思呢？因为有一些文件虽然后缀是`.mp4`，但是『它的心』却是其他文件的心。所以一旦播放器播放它，可能就会出错了...","excerpt":null}},"previous":{"fields":{"slug":"hexo-code-block-style-mess"},"frontmatter":{"title":"Hexo prism 插件导致代码格式错乱"}},"next":{"fields":{"slug":"android-get-sd-card-path-and-uuid"},"frontmatter":{"title":"Android 获取 SD 卡路径和 UUID"}}},"pageContext":{"id":"47e589e7-cdf0-5bbe-b03c-db6b5151c44e","previousPostId":"6ee3eff5-dca1-5693-b32e-525535bb71ba","nextPostId":"a179ceb7-2880-59a2-9abc-13ca1cea7792"}},"staticQueryHashes":["2082311839","2355076697","959449634"],"slicesMap":{}}