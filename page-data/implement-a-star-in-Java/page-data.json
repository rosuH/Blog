{"componentChunkName":"component---src-templates-blog-post-js","path":"/implement-a-star-in-Java/","result":{"data":{"site":{"siteMetadata":{"title":"Blog.kt"}},"markdownRemark":{"id":"5340f77d-656d-5174-b123-4eeb1edaf3be","excerpt":"前言 在某件机缘巧合（实际上是曲折的辛酸故事）的事情发生之后，我接到了通过 Javascript 实现一个 A* 算法任务。 讲道理我在一开始接到的时候还不知道这个是什么东西…后面阅读下面的文章之后才有所了解： A*寻路算法 上面这篇文章是译文，原文已经 40…","html":"<h1>前言</h1>\n<p>在某件机缘巧合（实际上是曲折的辛酸故事）的事情发生之后，我接到了通过 Javascript 实现一个 A* 算法任务。</p>\n<p>讲道理我在一开始接到的时候还不知道这个是什么东西…后面阅读下面的文章之后才有所了解：</p>\n<ul>\n<li><a href=\"http://www.cppblog.com/christanxw/archive/2006/04/07/5126.html\">A*寻路算法</a></li>\n</ul>\n<p>上面这篇文章是译文，原文已经 404 了，好在本文翻译的还不错。我看了这篇文章才了解了这些东西。</p>\n<p>本文章不鹦鹉学舌，误导读者。所以不会再赘述算法的流程，诸君看上述版本即可~</p>\n<p>再接着就是实现：</p>\n<ul>\n<li><a href=\"https://www.cnblogs.com/huansky/p/5572631.html\">js 实现 A* 寻路算法</a></li>\n</ul>\n<p>我的 js 实现也基本参考他的做的。当然，我是在 Cocos Creator 上搭建了场景实现了，所以其中还有相当一部分是关于 Cocos Creator 的应用。此处先按下不表。</p>\n<p>下面推荐一个很有意思的 Github 项目，他这个实现了诸多寻找路径的算法！还有网页版！你可以看看实现过程以助于你理解算法。</p>\n<ul>\n<li><a href=\"http://qiao.github.io/PathFinding.js/visual/\">PathFinding.js visual</a></li>\n</ul>\n<hr>\n<p>实现了 js 版本，我想着用我的老本行 Java 来实现故而有了如下的代码。</p>\n<p><strong>注意！因为写得匆忙，所以没有写测试代码。如有错漏，请见谅！并烦请赐教</strong>~</p>\n<h1>A* 算法 Java 实现</h1>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AStarFinder</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 分别是：直行成本，斜行成本，地图宽度和地图高度</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">STRAIGHT_COST</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">OBLIQUE_COST</span> <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">MAP_WIDTH</span> <span class=\"token operator\">=</span> <span class=\"token number\">960</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">MAP_HEIGHT</span> <span class=\"token operator\">=</span> <span class=\"token number\">480</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n     * 节点内部类，设有坐标、f, g, h 等变量\n     */</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> f<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Pos</span> parent<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setX</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setY</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getG</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> g<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setG</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> g<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> h<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setH</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setF</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> f<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Pos</span> <span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> parent<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Pos</span> parent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> parent<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 路径查找方法\n     * @param startX 起始点 x 坐标\n     * @param startY 起始点 y 坐标\n     * @param endX  终点 x 坐标\n     * @param endY  终点 y 坐标\n     * @return 返回路径坐标集合\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchRoad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> startX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> startY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// 分别是打开点列表、关闭点列表、结果点列表和障碍点列表</span>\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> openList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> closeList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> resultList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> barriersList <span class=\"token operator\">=</span> <span class=\"token function\">getBarriersList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 结果节点的索引</span>\n        <span class=\"token keyword\">int</span> resultIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 是否获得了结果</span>\n        <span class=\"token keyword\">boolean</span> isGetResult <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 将当前点加入开启列表中</span>\n        openList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>startX<span class=\"token punctuation\">,</span> startY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 先将当前节点取出并加入关闭列表之中</span>\n            <span class=\"token class-name\">Pos</span> currentPoint <span class=\"token operator\">=</span> openList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            closeList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>currentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 获取周围八个点的集合，并轮询</span>\n            <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> surroundPoints <span class=\"token operator\">=</span> <span class=\"token function\">getSurroundPoints</span><span class=\"token punctuation\">(</span>currentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Pos</span> pos <span class=\"token operator\">:</span> surroundPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// 是否是障碍点</span>\n                <span class=\"token keyword\">boolean</span> isBarrier <span class=\"token operator\">=</span> barriersList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 是否是关闭列表中的点</span>\n                <span class=\"token keyword\">boolean</span> isExistList <span class=\"token operator\">=</span> closeList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 是否是在地图范围内</span>\n                <span class=\"token keyword\">boolean</span> isInMap <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;</span> <span class=\"token constant\">MAP_WIDTH</span><span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span>\n                        pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;=</span> <span class=\"token constant\">MAP_HEIGHT</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isExistList <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>isBarrier <span class=\"token operator\">&amp;&amp;</span> isInMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token comment\">// 均是，计算 g 值</span>\n                    <span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> currentPoint<span class=\"token punctuation\">.</span>g <span class=\"token operator\">+</span>\n                            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currentPoint<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>currentPoint<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token constant\">STRAIGHT_COST</span> <span class=\"token operator\">:</span> <span class=\"token constant\">OBLIQUE_COST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token comment\">// 如果当前点不在打开点中，那么计算 h, f 值，并加入进入</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>openList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        pos<span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>endX <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>endY <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n                        pos<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> g<span class=\"token punctuation\">;</span>\n                        pos<span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span>g <span class=\"token operator\">+</span> pos<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n                        pos<span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> currentPoint<span class=\"token punctuation\">;</span>\n                        openList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token comment\">// 如果在打开点列表中，那么重新计算 g 和 f，因为 g 当前位置相关</span>\n                        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> openList<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g <span class=\"token operator\">&lt;</span> openList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                            openList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> currentPoint<span class=\"token punctuation\">;</span>\n                            openList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> g<span class=\"token punctuation\">;</span>\n                            openList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> g <span class=\"token operator\">+</span> openList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openList<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有可用通路\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">// 对打开点列表进行升序排序，每次都获得第一个 f 为最小</span>\n                openList<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token annotation punctuation\">@Override</span>\n                    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Pos</span> o1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Pos</span> o2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> o2<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">// 遍历打开点列表看结果点是否在其中</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Pos</span> tmpPos <span class=\"token operator\">:</span> openList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmpPos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> endX <span class=\"token operator\">&amp;&amp;</span> tmpPos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">==</span> endY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    isGetResult <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    resultIndex <span class=\"token operator\">=</span> openList<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>tmpPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>isGetResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resultIndex <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 如果索引值为 -1 ，那么说明没有结果点</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 获取路径</span>\n            <span class=\"token class-name\">Pos</span> currentPos <span class=\"token operator\">=</span> openList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>resultIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n                resultList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>currentPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                currentPos <span class=\"token operator\">=</span> currentPos<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>currentPos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">!=</span> startX <span class=\"token operator\">||</span> currentPos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">!=</span> startY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> resultList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 获取障碍物区域坐标集合\n     * @return 返回坐标集合\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getBarriersList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// @to-do</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 获取周围八个节点函数\n     * @param currentPoint 当前点\n     * @return  返回八个存有节点的集合\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getSurroundPoints</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Pos</span> currentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> currentPoint<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> currentPoint<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pos</span><span class=\"token punctuation\">></span></span> surroundPoints <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        surroundPoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        surroundPoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>x <span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        surroundPoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        surroundPoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        surroundPoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        surroundPoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        surroundPoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        surroundPoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pos</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> surroundPoints<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","frontmatter":{"title":"A*（A星） 算法 Java 实现","date":"2018-06-29","description":"在某件机缘巧合（实际上是曲折的辛酸故事）的事情发生之后，我接到了通过 Javascript 实现一个 A* 算法任务...","excerpt":null}},"previous":{"fields":{"slug":"java-threads-vs-android-asynctask-which-to-use"},"frontmatter":{"title":"「译」Java Thread vs AsyncTask：该用哪个？"}},"next":{"fields":{"slug":"hexo-code-block-style-mess"},"frontmatter":{"title":"Hexo prism 插件导致代码格式错乱"}}},"pageContext":{"id":"5340f77d-656d-5174-b123-4eeb1edaf3be","previousPostId":"b495f636-1b4e-5d95-9ad8-27bad118b4eb","nextPostId":"6ee3eff5-dca1-5693-b32e-525535bb71ba"}},"staticQueryHashes":["2082311839","2355076697","959449634"],"slicesMap":{}}