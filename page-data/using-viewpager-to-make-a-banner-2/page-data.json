{"componentChunkName":"component---src-templates-blog-post-js","path":"/using-viewpager-to-make-a-banner-2/","result":{"data":{"site":{"siteMetadata":{"title":"Blog.kt"}},"markdownRemark":{"id":"4fe4a600-22a5-5462-bb77-0e126f0c47c5","excerpt":"前言 在上一篇文章手动实现轮播图（一）：ViewPager 入门实践中，我们认识了这个布局，也简单上手了一下。 接下来这篇文章，我们会进一步朝着轮播图的方向前进。 原来的文章末尾，我使用了 Glide 加载 Gif…","html":"<h1>前言</h1>\n<p>在上一篇文章<a href=\"https://blog.rosuh.me/2018/04/using-viewpager-to-make-a-banner-1/\">手动实现轮播图（一）：ViewPager 入门实践</a>中，我们认识了<code class=\"language-text\">ViewPager</code>这个布局，也简单上手了一下。</p>\n<p>接下来这篇文章，我们会进一步朝着轮播图的方向前进。</p>\n<blockquote>\n<p>原来的文章末尾，我使用了 Glide 加载 Gif 图片作为轮播图的内容，所以现在也是基于那个代码继续下去的。</p>\n<p>如果对这部分比较陌生，建议回去看一下文章末尾仓库地址里的代码哦</p>\n</blockquote>\n<p>本文章中我们将会实现：</p>\n<ul>\n<li>循环滚动</li>\n<li>切换指示器</li>\n<li>定时切换</li>\n</ul>\n<p>接下来就让我们开工吧。</p>\n<h1>1. 循环滚动</h1>\n<p><code class=\"language-text\">ViewPager</code>虽然好用，但是并不原生支持循环滚动，也就是你：</p>\n<ul>\n<li>第一个往左滑，会跳到最后一个</li>\n<li>从最后一个往右滑，会调回第一个</li>\n</ul>\n<p>我们之前实现的效果里，第一个就无法再往左滑了，最后一个就无法再往右滑了。这样轮播图就不是“轮”播了。</p>\n<p>所以我们需要自己来实现循环滚动这个效果。</p>\n<p>该怎么实现呢？目前也有比较成熟的三个做法：</p>\n<h2>多页面假循环</h2>\n<ul>\n<li>创建很多个页面，即便我们真正需要展示的时候只有 5 个页面\n<ul>\n<li>把起始点放在队列中间，如果到了要展示的第一个页面，继续往左的时候，我们把接下来就把页面设置为最后一个的样式</li>\n<li>这样不管用户往左还是往右滑，只要是正常情况下，用户都是滑不到头的，造成视觉上的循环\n<ul>\n<li>正常 App 中，即便你使用一个这样的页面队列来显示，用户也没有耐心一直滑下去</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>假设我们现在创建了 1000 个页面的<code class=\"language-text\">ViewPager</code>，然后我们实际需要展示的只有 5 个页面，那么实现的效果如下：</p>\n<p>我们把第一个展示的页面设置为 500，那用户需要滑动 499 才会到头。</p>\n<p><img src=\"https://img.ioioi.top/wiki/2018-04-21_10-22-02.png\" alt=\"pic\"></p>\n<h3>这样性能会不会很差？</h3>\n<ul>\n<li>不会</li>\n</ul>\n<p>因为虽然说的是“创建1000”个页面，但是实际上我们只是告诉<code class=\"language-text\">ViewPager</code>的<code class=\"language-text\">Adapter</code>我们会使用这么多个，不代表他会创建这么多个。</p>\n<p>我们会在<code class=\"language-text\">Adapter</code>的<code class=\"language-text\">getCount</code>方法里返回 1000，这个方法只是帮助<code class=\"language-text\">Adapter</code>获取正确的<code class=\"language-text\">position</code>的，并不是真正创建出来。（通过阅读<code class=\"language-text\">PagerAdapter</code> 的源码得出）</p>\n<p>记得前面我们说过的，<code class=\"language-text\">FragmentPagerAdapter</code>会默认帮我们创建三个页面，所以这里也只会创建三个页面，超过前中后的其他页面都会被回收。</p>\n<h3>其余两种实现方法</h3>\n<p>我们主要使用第一种，理解起来简单易懂，也没有明显的短板。</p>\n<p>其余两种方法描述看下面这篇文章：<a href=\"https://blog.csdn.net/zhengxiaoyao0716/article/details/48805703\">Android实现真正的ViewPager【平滑过渡】…</a></p>\n<hr>\n<p>介绍完实现思路，我们就可以开始实现了。</p>\n<p>打开<code class=\"language-text\">MainActivity.java</code>，修改代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainActivity</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppCompatActivity</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">MAX_NUMBER</span> <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">START_POSITION</span> <span class=\"token operator\">=</span> <span class=\"token constant\">MAX_NUMBER</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        mViewPager<span class=\"token punctuation\">.</span><span class=\"token function\">setAdapter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FragmentPagerAdapter</span><span class=\"token punctuation\">(</span>fm<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token comment\">// 存储通过 position 计算出正确的数组索引</span>\n            <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> mIndex<span class=\"token punctuation\">;</span>\n\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token class-name\">Fragment</span> <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                mIndex <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">-</span> <span class=\"token constant\">START_POSITION</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> mStringList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>position <span class=\"token operator\">&lt;</span> <span class=\"token constant\">START_POSITION</span> <span class=\"token operator\">&amp;&amp;</span> mIndex <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    mIndex <span class=\"token operator\">=</span> mStringList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> mIndex<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token class-name\">PageFragment</span><span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span>mIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token constant\">MAX_NUMBER</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        mViewPager<span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">START_POSITION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>定义两个常量，分别是\n<ul>\n<li><code class=\"language-text\">MAX_NUMBER</code>：页面总数，一共 1000 个</li>\n<li><code class=\"language-text\">START_POSITION</code>：起始的页面，从中间第 500 个开始</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">mIndex <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">-</span> <span class=\"token constant\">START_POSITION</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> mStringList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>position <span class=\"token operator\">&lt;</span> <span class=\"token constant\">START_POSITION</span> <span class=\"token operator\">&amp;&amp;</span> mIndex <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    mIndex <span class=\"token operator\">=</span> mStringList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> mIndex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>计算当前位置<code class=\"language-text\">position</code>和起始位置（<code class=\"language-text\">START_POSITION</code>）的距离，然后把结果和真正要展示的页面数量（此处暂时使用<code class=\"language-text\">mStringList</code>的长度代替）取余\n<ul>\n<li>距离有正负，所以取了绝对值。但是如果只是绝对值然后去取余的话，左滑的时候，就不是 1->5 -> 4 这样子，而是 1 ->2 ->3 这样。这是取余运算的结果，不熟悉的同学可以回忆一下取余的结果</li>\n<li>所以我们加了判断\n<ul>\n<li>页面<code class=\"language-text\">position</code>大于起始位置 ，那就直接用相对距离取余</li>\n<li>如若小于起始位置，那么用实际页面数量减去取余结果，就可以实现倒数的效果了</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">MAX_NUMBER</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>此处告诉<code class=\"language-text\">Adapter</code>一共有多少个页面</li>\n</ul>\n<p>记得设置起始页面哦：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">mViewPager<span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">START_POSITION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这样我们的循环滚动就完成了~快试试看吧。</p>\n<p><img src=\"https://img.ioioi.top/wiki/unlimited-circle.gif\" alt=\"pic\"></p>\n<h1>2. 页面指示器</h1>\n<p>许多轮播图都有一个小指示器，用来标志当前的页面。我们现在就来做一个。</p>\n<p>做了前面的循环滚动，这样的页面指示器原理应该不难理解。</p>\n<p>思路是：</p>\n<ul>\n<li>创建控件样式\n<ul>\n<li>选中的样式</li>\n<li>未选中的样式</li>\n</ul>\n</li>\n<li>添加控件到视图里面</li>\n<li>当页面滑动的时候，修改指示器的样式</li>\n</ul>\n<h2>创建控件样式</h2>\n<p>在<code class=\"language-text\">res/drawable</code>文件夹里，创建两个文件：</p>\n<p>正常样式：<em>dot_normal.xml</em></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>shape</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>android</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/apk/res/android<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>shape</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>oval<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>size</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5dp<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5dp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>solid</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@android:color/holo_red_dark<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>shape</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>被选中样式：<em>dot_selected.xml</em></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>shape xmlns<span class=\"token operator\">:</span>android<span class=\"token operator\">=</span><span class=\"token string\">\"http://schemas.android.com/apk/res/android\"</span>\n    android<span class=\"token operator\">:</span>shape<span class=\"token operator\">=</span><span class=\"token string\">\"oval\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>size android<span class=\"token operator\">:</span>width<span class=\"token operator\">=</span><span class=\"token string\">\"5dp\"</span>\n        android<span class=\"token operator\">:</span>height<span class=\"token operator\">=</span><span class=\"token string\">\"5dp\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>solid android<span class=\"token operator\">:</span>color<span class=\"token operator\">=</span><span class=\"token string\">\"@color/colorPrimary\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>shape<span class=\"token operator\">></span></code></pre></div>\n<p>接着在<code class=\"language-text\">activity_main.xml</code>里加入一个<code class=\"language-text\">LinearLayout</code>布局，后面我们使用代码的方式把小点加入进去：</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RelativeLayout</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>android</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/apk/res/android<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>android.support.v4.view.ViewPager</span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/view_pager_inside<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>400dp<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>400dp<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>background</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@android:color/darker_gray<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_centerInParent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>android.support.v4.view.ViewPager</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>LinearLayout</span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/ll_inside<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_below</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/view_pager_inside<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30dp<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>orientation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>horizontal<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>gravity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RelativeLayout</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>添加控件到视图中</h2>\n<blockquote>\n<p>此处的代码思路来自<a href=\"https://blog.csdn.net/u012760183/article/details/52230786\">Android ViewPager 无限循环左右滑动（可自动） 实现</a>。</p>\n</blockquote>\n<p>回到<code class=\"language-text\">MainActivity.java</code>中，</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainActivity</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppCompatActivity</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TextView</span><span class=\"token punctuation\">></span></span> mTextViews<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LinearLayout</span> mLinearLayout<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setContentView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>activity_main<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mViewPager <span class=\"token operator\">=</span> <span class=\"token function\">findViewById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>view_pager_inside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mLinearLayout <span class=\"token operator\">=</span> <span class=\"token function\">findViewById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>ll_inside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">initCircle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initCircle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mTextViews <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> mStringList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">TextView</span> textView <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                textView<span class=\"token punctuation\">.</span><span class=\"token function\">setBackgroundResource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>dot_selected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                textView<span class=\"token punctuation\">.</span><span class=\"token function\">setBackgroundResource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>dot_normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token class-name\">LinearLayout<span class=\"token punctuation\">.</span>LayoutParams</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinearLayout<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            params<span class=\"token punctuation\">.</span><span class=\"token function\">setMargins</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            textView<span class=\"token punctuation\">.</span><span class=\"token function\">setLayoutParams</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mTextViews<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>textView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mLinearLayout<span class=\"token punctuation\">.</span><span class=\"token function\">addView</span><span class=\"token punctuation\">(</span>textView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>定义两个变量\n<ul>\n<li><code class=\"language-text\">mTextViews</code>：存放小点的列表\n<ul>\n<li>我们的小点其实是由<code class=\"language-text\">TetxView</code>构成，然后背景颜色设置为圆形的</li>\n</ul>\n</li>\n<li><code class=\"language-text\">mLinearLayout</code>：引用刚刚创建的<code class=\"language-text\">LinearLayout</code>布局</li>\n</ul>\n</li>\n<li>创建一个<code class=\"language-text\">initCIrcle()</code>方法\n<ul>\n<li>使用代码的方式创建<code class=\"language-text\">TextView</code>视图，为每个视图设置宽高、外边距和背景等属性\n<ul>\n<li>背景样式就是刚刚创建的两个<code class=\"language-text\">.xml</code>文件</li>\n</ul>\n</li>\n<li>使用 <code class=\"language-text\">addView</code>方法把小点添加到布局当中</li>\n</ul>\n</li>\n</ul>\n<p>在<code class=\"language-text\">Oncreate()</code>方法中调用之后，我们就会看到小点已经出现了。</p>\n<p>现在我们需要根据页面来修改样式，以达到指示器的作用。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainActivity</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppCompatActivity</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        mViewPager<span class=\"token punctuation\">.</span><span class=\"token function\">addOnPageChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ViewPager<span class=\"token punctuation\">.</span>OnPageChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPageScrolled</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> positionOffset<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> positionOffsetPixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPageSelected</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">changePoints</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">%</span> mStringList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPageScrollStateChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">changePoints</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mTextViews <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> mTextViews<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pos <span class=\"token operator\">==</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    mTextViews<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setBackgroundResource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>dot_selected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    mTextViews<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setBackgroundResource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>dot_normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>为<code class=\"language-text\">mViewPager</code>添加一个状态监听器<code class=\"language-text\">ViewPager.OnPageChangeListener</code>\n<ul>\n<li>重写<code class=\"language-text\">onPageSelected()</code>方法：该方法会在页面被选中的时候调用</li>\n<li>在该方法内，我们调用<code class=\"language-text\">changePoint()</code>方法来改变指示器的样式</li>\n</ul>\n</li>\n</ul>\n<p>我们在调用<code class=\"language-text\">changePoint()</code>的时候，传入的是<code class=\"language-text\">position % mStringList.length</code>。这里是有问题的。</p>\n<p>如果直接使用<code class=\"language-text\">position</code>对<code class=\"language-text\">mString.length</code>进行取模，在这个例子里是没问题，因为我们起始位置（500）恰好是<code class=\"language-text\">mString.length</code>的倍数。所以此时会从 0 开始。但如果我们以后修改了起始位置亦或者修改了展示图片的数量的话，这里就会出错了。</p>\n<p>所以我们还是使用和之前一样的方式来获得索引值。修改一下<code class=\"language-text\">onPageSelected()</code>方法：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> mIndex<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPageSelected</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mIndex <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">-</span> <span class=\"token constant\">START_POSITION</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> mStringList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>position <span class=\"token operator\">&lt;</span> <span class=\"token constant\">START_POSITION</span> <span class=\"token operator\">&amp;&amp;</span> mIndex <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        mIndex <span class=\"token operator\">=</span> mStringList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> mIndex<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">changePoints</span><span class=\"token punctuation\">(</span>mIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这里为了方便，就直接使用这段代码了。有时间的同学可以自己优化一下，提高复用率。</p>\n<p>按照道理，现在应该就可以了。</p>\n<p><img src=\"https://img.ioioi.top/wiki/indicator.gif\" alt=\"indicator\"></p>\n<h1>3. 定时播放</h1>\n<p>轮播图的其中一个特点，就是定时播放。</p>\n<p>我们已经实现了这么多效果了，定时播放应该也是小菜一碟。</p>\n<p>我们可以使用<code class=\"language-text\">Handle</code>调用<code class=\"language-text\">setCurrentItem()</code>即可。</p>\n<blockquote>\n<p>以下代码思路来自<a href=\"https://blog.csdn.net/u012760183/article/details/52230786\">Android ViewPager 无限循环左右滑动（可自动） 实现</a>。</p>\n</blockquote>\n<p>修改我们的<code class=\"language-text\">MainActivity.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Handler</span> mHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setContentView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>activity_main<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        mHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mHandler<span class=\"token punctuation\">.</span><span class=\"token function\">postDelayed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TimerRunnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">TimerRunnable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> curItem <span class=\"token operator\">=</span> mViewPager<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mViewPager<span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentItem</span><span class=\"token punctuation\">(</span>curItem<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mHandler<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                mHandler<span class=\"token punctuation\">.</span><span class=\"token function\">postDelayed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//此处在Activity退出时及时 回收</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>4. 修改过渡动画</h1>\n<p>调用<code class=\"language-text\">ViewPager.setPageTransformer()</code>方法即可自行设置动画。</p>\n<p>让我们先新建一个动画类<code class=\"language-text\">PhotoTransformer.java</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">me<span class=\"token punctuation\">.</span>rosuh<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>viewpagernew</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NonNull</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ViewPager</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">View</span></span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PhotoTransformer</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ViewPager<span class=\"token punctuation\">.</span>PageTransformer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transformPage</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">View</span> page<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> pageWidth <span class=\"token operator\">=</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>position <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            page<span class=\"token punctuation\">.</span><span class=\"token function\">setAlpha</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>position <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            page<span class=\"token punctuation\">.</span><span class=\"token function\">setPivotX</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">&lt;</span> <span class=\"token number\">0f</span> <span class=\"token operator\">?</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            page<span class=\"token punctuation\">.</span><span class=\"token function\">setPivotY</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            page<span class=\"token punctuation\">.</span><span class=\"token function\">setRotationY</span><span class=\"token punctuation\">(</span><span class=\"token number\">90f</span> <span class=\"token operator\">*</span> position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            page<span class=\"token punctuation\">.</span><span class=\"token function\">setAlpha</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>然后为<code class=\"language-text\">mViewPager</code>设置动画：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token class-name\">FragmentManager</span> fm <span class=\"token operator\">=</span> <span class=\"token function\">getSupportFragmentManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmViewPager<span class=\"token punctuation\">.</span><span class=\"token function\">setPageTransformer</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PhotoTransformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmViewPager<span class=\"token punctuation\">.</span><span class=\"token function\">setAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>设置这个动画，最好把<code class=\"language-text\">CardView</code>的阴影属性设置为 0。\n然后稍微修改一下布局。（在此不列出，可以到代码仓库自己看一下）。\n下面是效果：</p>\n<p><img src=\"https://img.ioioi.top/wiki/transformer.gif\" alt=\"transformer\"></p>\n<h1>结语</h1>\n<p>本项目地址<a href=\"https://github.com/rosuH/ViewPagerDemo\"><strong>ViewPagerDemo</strong></a>。</p>\n<p>目前为止，我们的轮播图就已经做好了。</p>\n<p>这两篇文章的目标读者是刚入门的同学，所以有许多地方还有改进的空间。</p>\n<p>但是不碍于我们掌握。</p>\n<blockquote>\n<p>文章作者毕竟经验不多，水平有限，所以缺漏在所难免，希望路过读到本文的前辈们不吝赐教，谢谢~</p>\n</blockquote>\n<p>感谢一下参考文章和资料：</p>\n<ul>\n<li><a href=\"https://github.com/geftimov/android-viewpager-transformers\"><strong>android-viewpager-transformers</strong></a></li>\n<li><a href=\"https://blog.csdn.net/zhengxiaoyao0716/article/details/48805703\">Android实现真正的ViewPager【平滑过渡】…</a></li>\n<li><a href=\"https://blog.csdn.net/u012760183/article/details/52230786\">Android ViewPager 无限循环左右滑动（可自动） 实现</a></li>\n</ul>\n<p><img src=\"https://img.ioioi.top/wiki/loadcat.gif\" alt=\"cat\"></p>","frontmatter":{"title":"手动实现轮播图（二）：循环滚动、定时切换与指示器","date":"2018-04-21","description":"本文是系列文章第二篇，这一次我们开始来造轮子啦...","excerpt":null}},"previous":{"fields":{"slug":"using-viewpager-to-make-a-banner-1"},"frontmatter":{"title":"手动实现轮播图（一）：ViewPager 入门实践"}},"next":{"fields":{"slug":"java-threads-vs-android-asynctask-which-to-use"},"frontmatter":{"title":"「译」Java Thread vs AsyncTask：该用哪个？"}}},"pageContext":{"id":"4fe4a600-22a5-5462-bb77-0e126f0c47c5","previousPostId":"bcc466db-9561-5893-88fe-45bae75c6ef5","nextPostId":"b495f636-1b4e-5d95-9ad8-27bad118b4eb"}},"staticQueryHashes":["2082311839","2355076697","959449634"],"slicesMap":{}}