{"componentChunkName":"component---src-templates-blog-post-js","path":"/Github-page-configure-and-enable-HTTPS/","result":{"data":{"site":{"siteMetadata":{"title":"Blog.kt"}},"markdownRemark":{"id":"f387e4c2-cbd8-525e-b175-8c8daf2744fd","excerpt":"因为本博客迁移到了 GitHub Page，加之 个人的 wiki 站点亦是使用 Hexo 托管在 GitHub Page 的，故而想将两个站点都配置到一个域名下面，分为两个子域名： 下面是具体配置步骤： 1. 上传 CNAME 到仓库 GitHub Page…","html":"<p>因为本博客迁移到了 GitHub Page，加之 <a href=\"https://wiki.rosuh.me\">个人的 wiki</a> 站点亦是使用 Hexo 托管在 GitHub Page 的，故而想将两个站点都配置到一个域名下面，分为两个子域名：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">blog.rosuh.me\nwiki.rosuh.me</code></pre></div>\n<p>下面是具体配置步骤：</p>\n<h1>1. 上传 CNAME 到仓库</h1>\n<p>GitHub Page 支持自定义域名，只需要在仓库的默认分支根目录下创建一个 <code class=\"language-text\">CNAME</code> 文件，里面填上你想要的域名即可。以我的博客为例，我的 <code class=\"language-text\">CNAME</code> 文件内容如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">blog.rosuh.me</code></pre></div>\n<p>相同的，在我 wiki 站点的目录亦需要添加如下 <code class=\"language-text\">CNAME</code> 文件：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">wiki.rosuh.me</code></pre></div>\n<p><strong>注意事项</strong> ：如果你为某一个站点设定了子域名，那么意味着你不能在其他站点中填入诸如下面的域名：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">www.rosuh.me\n*.rosuh.me</code></pre></div>\n<p>因为通配符或者未指定子域名的情况，会和指定子域名的仓库冲突。</p>\n<h1>2. 为域名添加 CNAME 解析</h1>\n<p>去到你的域名托管商那里，如果并不特别在意中国的载入速度，那么推荐使用 <a href=\"https://www.cloudflare.com/\">CloudFlare</a> 作为你的域名托管商。益处后文会提及一些。</p>\n<ul>\n<li>为你的域名添加两个 A 记录分别指向 GitHub 的主机</li>\n<li>为你的域名添加 CNAME 记录作为子域名的凭据（此处我添加了两个</li>\n</ul>\n<p><img src=\"https://img.ioioi.top/blog-img/163425113.png\" alt=\"添加 CNAME 记录\"></p>\n<p><strong>注意事项</strong> ：可以看到我的域名为 <code class=\"language-text\">rosuh.me</code> ，而 GitHub page 给我的默认域名为 <code class=\"language-text\">rosuh.github.io</code> （据你的 GitHub 用户名而定），而我要添加的子域名分别为：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">blog.rosuh.me\nwiki.rosuh.me</code></pre></div>\n<p>耐心等待 DNS 刷新即可。</p>\n<p>至此，子域名配置已经可以使用了。接着我们继续配置 HTTPS。</p>\n<h1>3. CloudFlare 提供的 HTTPS 服务</h1>\n<p>GitHub Page 目前（2017）仍旧没有提供自定义域名的 HTTPS。我们可以使用 <a href=\"https://www.cloudflare.com/\">CloudFlare</a> 的 CDN 实现 ”曲线救国“。</p>\n<p>在 <a href=\"https://www.cloudflare.com/\">CloudFlare</a> 的 <code class=\"language-text\">Crypto</code> 选项中，我们选择 <code class=\"language-text\">Flexible</code></p>\n<p><img src=\"https://img.ioioi.top/blog-img/163904181.png\" alt=\"SSL 配置\"></p>\n<p>这个选项实现了如下链接：</p>\n<ul>\n<li>User —> HTTPS —> CloudFlare CDN</li>\n<li>CloudFlare —> HTTP —> Hots(GitHub Page)</li>\n</ul>\n<p>也就是说，我们使用了 CloudFlare 的 CDN，所以用户链接到其 CDN 时，将会使用 HTTPS 链接，而 CloudFlare 的 CDN 链接到我们的网站也就是 GitHub Page 时，仍旧是 HTTP。</p>\n<p>这样的方式也能抵御一部分中间人攻击和网络劫持。</p>\n<p><strong>但是现在，我们的用户依旧可以选择使用 HTTP 的方式链接到我们的网站，因为我们没有设置强制 HTTPS 服务，所以这样依旧有被剥离攻击的危险</strong> 。</p>\n<p><em>为了验证这个说法，你可以直接输入域名进行访问，你会发现直接执行的是 HTTP 协议</em> 。</p>\n<h2>3.1 启用强制 HTTPS 访问服务（HSTS）</h2>\n<p>我们的目标是从两个时间点入手：</p>\n<ul>\n<li>用户首次次链接到我们的网站</li>\n<li>用户非首次链接到我们的网站</li>\n</ul>\n<p>HSTS 指的是强制使用 HTTPS 服务，但是首次链接并不包含在其中。一般情况下，大部分网站都是使用：</p>\n<ul>\n<li>首次链接 302 跳转：从 HTTP 到 HTTPS</li>\n<li>非首次链接：HSTS 生效</li>\n</ul>\n<p>这么一来，我们就得先启用链接跳转服务了。</p>\n<p>如果是自己搭建的服务器，我们可以在服务器端做跳转和 HSTS 服务，现在我们只需要使用 CloudFlare 提供的服务就行啦。是不是很方便？ ;)</p>\n<p>依旧是点开 <code class=\"language-text\">Crypto</code> 页面，下滑找到 <code class=\"language-text\">Always use HTTPS</code> 然后点击 <code class=\"language-text\">on</code> 开启就行了。</p>\n<p>接着看到下面的 <code class=\"language-text\">HTTP Strict Transport Security (HSTS)</code> ，仔细阅读完 CloudFalre 给你的提示，然后在 <code class=\"language-text\">Enable HSTS</code> 处切换为 <code class=\"language-text\">on</code> 就大功告成啦。</p>\n<p>到现在我们的文章标题就实现得差不多啦。</p>\n<p>本文利用了 GitHub page 和 CloudFlare 就轻松完成了从无到有，从有到赞的配置过程。</p>\n<p>CloudFlare 是不是很赞啊？下面再介绍一个 CloudFlare 的功能：</p>\n<p>如果你细心一些，就会发现如果直接访问不带子域的链接比如我的 <code class=\"language-text\">rosuh.me</code> 是没法访问的。因为你的 GitHub page 设定了子域名，所以这个域名就没办法直接代表一个仓库了。</p>\n<p>这样的话，我们可以使用 CloudFlare 的 <code class=\"language-text\">Page Rules</code> 功能来进行跳转操作。</p>\n<p>比如我想要访问主域名 <code class=\"language-text\">rosuh.me</code> 的时候直接跳转到我的博客，那么我可以添加一个规则如下：</p>\n<p><img src=\"https://img.ioioi.top/blog-img/170044210.png\" alt=\"page rules\"></p>\n<p>这样就可以直接跳转到我的博客啦。</p>\n<hr>\n<p>参看：</p>\n<ul>\n<li><a href=\"http://wiki.jikexueyuan.com/project/github-pages-basics/tip-cname.html\">在 DNS 提供者上配置 CNAME 记录的技巧</a></li>\n<li><a href=\"http://wiki.jikexueyuan.com/project/github-pages-basics/set-custom-domains.html\">设置 GitHub Pages 的自定义域名</a></li>\n<li><a href=\"http://swiftcafe.io/post/hsts\">开启 HSTS 协议让你的站点更加安全</a></li>\n</ul>","frontmatter":{"title":"GitHub Page 子域名配置 & 启用 HTTPS","date":"2017-08-02","description":"因为本博客迁移到了 GitHub Page，加之个人的 wiki 站点亦是使用 Hexo 托管在 GitHub Page 的，故而想将两个站点都配置到一个域名下面...","excerpt":null}},"previous":{"fields":{"slug":"lets-using-https-2"},"frontmatter":{"title":"启用 HTTPS 札记（续）"}},"next":{"fields":{"slug":"unknow-command-or-service-error-in-oh-my-zsh"},"frontmatter":{"title":"修复 oh-my-zsh 和 Git 的搭配错误"}}},"pageContext":{"id":"f387e4c2-cbd8-525e-b175-8c8daf2744fd","previousPostId":"03b53896-89f8-5f11-9265-8165c0c155fe","nextPostId":"e79a4a13-9c23-5f70-a94e-3abaebb6df4c"}},"staticQueryHashes":["2082311839","2355076697","959449634"],"slicesMap":{}}